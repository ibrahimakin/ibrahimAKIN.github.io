{"version":3,"sources":["components/Mascot.js","pages/Start.js","services/Words.js","services/Questions.js","services/Sentences.js","components/Question.js","helper/functionality.js","pages/Questions.js","App.js","reportWebVitals.js","index.js"],"names":["Mascot","onChange","smw","useRef","mouth","useEffect","moveSmiley","e","stopPropagation","preventDefault","x","pageX","y","pageY","w","document","body","clientWidth","h","clientHeight","angleY","angleX","current","getBoundingClientRect","style","transform","addEventListener","removeEventListener","value","classList","remove","add","className","ref","Start","to","QuestionSource","words","sentences","Question","isClicked","getRandomQuestion","qList","types","type","Math","floor","random","length","q","i","includes","push","useState","question","setQuestion","getButtonStyle","color","getRandomColor","rsPlay","getElementsByClassName","element","tr","img","src","alt","map","item","itemI","onClick","setTimeout","handleClick","textAsButton","displayText","en","voice","text","Questions","onEmotionChange","App","fetch","then","res","json","val","catch","err","console","log","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.121aa0d2.chunk.js","sourcesContent":["import { useEffect, useRef } from 'react';\r\n\r\nfunction Mascot({ onChange }) {\r\n    const smw = useRef();\r\n    const mouth = useRef();\r\n    useEffect(() => {\r\n        function moveSmiley(e) {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n            const a = 45;\r\n            const x = e.pageX;\r\n            const y = e.pageY;\r\n            const w = document.body.clientWidth;\r\n            const h = document.body.clientHeight;\r\n            const o = smw.current.getBoundingClientRect().x - (w/2);\r\n            const angleY = ((h / 2) - y) / (h / 2) * a;\r\n            let angleX = ((x - o) - (w / 2)) / (w / 2) * a;\r\n            if(angleX < -60) { angleX = -60; }\r\n            smw.current.style.transform = `rotateX(${angleY}deg) rotateY(${angleX}deg)`;\r\n        }    \r\n        document.body.addEventListener('mousemove', moveSmiley);\r\n        return () => { document.body.removeEventListener('mousemove', moveSmiley); }\r\n    }, []);\r\n    if (onChange) {\r\n        onChange.current = (value) => {\r\n            if (value === true) {\r\n                mouth.current.classList.remove('mouth-sad');\r\n                mouth.current.classList.add('mouth-happy');\r\n            } else if (value === false) {\r\n                mouth.current.classList.remove('mouth-happy');\r\n                mouth.current.classList.add('mouth-sad');\r\n            } else {\r\n                mouth.current.classList.remove('mouth-happy');\r\n                mouth.current.classList.remove('mouth-sad');\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"smiley\">\r\n            <div ref={smw} className=\"smiley-wrapper\" style={{transform: 'rotateX(0deg) rotateY(0deg)'}}>\r\n                <div>\r\n                    <div className=\"eye eye-left\"></div>\r\n                    <div className=\"eye eye-right\"></div>\r\n                    <div className=\"blush blush-left\"></div>\r\n                    <div className=\"blush blush-right\"></div>\r\n                    <div className=\"mouth\" ref={mouth}></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Mascot;","import { Link } from 'react-router-dom';\r\nimport Mascot from '../components/Mascot';\r\nimport '../styles/Start.css';\r\n\r\nfunction Start() {\r\n    return (\r\n        <div className=\"page\">\r\n            <div className=\"start-cont\">\r\n                <Mascot/>\r\n                <h2>Welcome!</h2>\r\n                <Link className=\"el-btn\" to=\"/questions\">Start Game</Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Start;","export const words = [{\r\n    \"type\": \"word\",\r\n    \"en\": \"Brass\",\r\n    \"tr\": \"Prinçten Yapılmış\",\r\n    \"en_s\": \"\",\r\n    \"tr_s\": \"\"\r\n}, {\r\n    \"type\": \"word\",\r\n    \"en\": \"January\",\r\n    \"tr\": \"Ocak   (1)\",\r\n    \"en_s\": \"\",\r\n    \"tr_s\": \"\"\r\n}, {\r\n    \"type\": \"word\",\r\n    \"en\": \"February\",\r\n    \"tr\": \"Şubat   (2)\",\r\n    \"en_s\": \"\",\r\n    \"tr_s\": \"\"\r\n}, {\r\n    \"type\": \"word\",\r\n    \"en\": \"March\",\r\n    \"tr\": \"Mart   (3)\",\r\n    \"en_s\": \"\",\r\n    \"tr_s\": \"\"\r\n}, {\r\n    \"type\": \"word\",\r\n    \"en\": \"April\",\r\n    \"tr\": \"Nisan   (4)\",\r\n    \"en_s\": \"\",\r\n    \"tr_s\": \"\"\r\n}, {\r\n    \"type\": \"word\",\r\n    \"en\": \"May\",\r\n    \"tr\": \"Mayıs   (5)\",\r\n    \"en_s\": \"\",\r\n    \"tr_s\": \"\"\r\n}, {\r\n    \"type\": \"word\",\r\n    \"en\": \"June\",\r\n    \"tr\": \"Haziran   (6)\",\r\n    \"en_s\": \"\",\r\n    \"tr_s\": \"\"\r\n}, {\r\n    \"type\": \"word\",\r\n    \"en\": \"July\",\r\n    \"tr\": \"Temmuz   (7)\",\r\n    \"en_s\": \"\",\r\n    \"tr_s\": \"\"\r\n}, {\r\n    \"type\": \"word\",\r\n    \"en\": \"August\",\r\n    \"tr\": \"Ağustos   (8)\",\r\n    \"en_s\": \"\",\r\n    \"tr_s\": \"\"\r\n}, {\r\n    \"type\": \"word\",\r\n    \"en\": \"September\",\r\n    \"tr\": \"Eylül   (9)\",\r\n    \"en_s\": \"\",\r\n    \"tr_s\": \"\"\r\n}, {\r\n    \"type\": \"word\",\r\n    \"en\": \"October\",\r\n    \"tr\": \"Ekim   (10)\",\r\n    \"en_s\": \"\",\r\n    \"tr_s\": \"\"\r\n}, {\r\n    \"type\": \"word\",\r\n    \"en\": \"November\",\r\n    \"tr\": \"Kasım   (11)\",\r\n    \"en_s\": \"\",\r\n    \"tr_s\": \"\"\r\n}, {\r\n    \"type\": \"word\",\r\n    \"en\": \"December\",\r\n    \"tr\": \"Aralık   (12)\",\r\n    \"en_s\": \"\",\r\n    \"tr_s\": \"\"\r\n}, {\r\n    \"type\": \"word\",\r\n    \"en\": \"Monday\",\r\n    \"tr\": \"Pazartesi   (1)\",\r\n    \"en_s\": \"\",\r\n    \"tr_s\": \"\"\r\n}, {\r\n    \"type\": \"word\",\r\n    \"en\": \"Tuesday\",\r\n    \"tr\": \"Salı   (2)\",\r\n    \"en_s\": \"\",\r\n    \"tr_s\": \"\"\r\n}, {\r\n    \"type\": \"word\",\r\n    \"en\": \"Wednesday\",\r\n    \"tr\": \"Çarşamba   (3)\",\r\n    \"en_s\": \"\",\r\n    \"tr_s\": \"\"\r\n}, {\r\n    \"type\": \"word\",\r\n    \"en\": \"Thursday\",\r\n    \"tr\": \"Perşembe   (4)\",\r\n    \"en_s\": \"\",\r\n    \"tr_s\": \"\"\r\n}, {\r\n    \"type\": \"word\",\r\n    \"en\": \"Friday\",\r\n    \"tr\": \"Cuma   (5)\",\r\n    \"en_s\": \"\",\r\n    \"tr_s\": \"\"\r\n}, {\r\n    \"type\": \"word\",\r\n    \"en\": \"Saturday\",\r\n    \"tr\": \"Cumartesi   (6)\",\r\n    \"en_s\": \"\",\r\n    \"tr_s\": \"\"\r\n}, {\r\n    \"type\": \"word\",\r\n    \"en\": \"Sunday\",\r\n    \"tr\": \"Pazar   (7)\",\r\n    \"en_s\": \"\",\r\n    \"tr_s\": \"\"\r\n}, {\r\n    \"type\": \"word\",\r\n    \"en\": \"Aisle\",\r\n    \"tr\": \"Koridor\",\r\n    \"en_s\": \"\",\r\n    \"tr_s\": \"\"\r\n}, {\r\n    \"type\": \"word\",\r\n    \"en\": \"Nephew\",\r\n    \"tr\": \"Yeğen (Erkek)\",\r\n    \"en_s\": \"\",\r\n    \"tr_s\": \"\"\r\n}, {\r\n    \"type\": \"word\",\r\n    \"en\": \"Neiece\",\r\n    \"tr\": \"Yeğen (Kız)\",\r\n    \"en_s\": \"\",\r\n    \"tr_s\": \"\"\r\n}, {\r\n    \"type\": \"word\",\r\n    \"en\": \"Draft\",\r\n    \"tr\": \"Taslak\",\r\n    \"en_s\": \"\",\r\n    \"tr_s\": \"\"\r\n}, {\r\n    \"type\": \"word\",\r\n    \"en\": \"Skulking\",\r\n    \"tr\": \"Sinsi / Korkak\",\r\n    \"en_s\": \"\",\r\n    \"tr_s\": \"\"\r\n}, {\r\n    \"type\": \"word\",\r\n    \"en\": \"to frighten\",\r\n    \"tr\": \"Korkutmak\",\r\n    \"en_s\": \"\",\r\n    \"tr_s\": \"\"\r\n}, {\r\n    \"type\": \"word\",\r\n    \"en\": \"to toss\",\r\n    \"tr\": \"Atmak / Fırlatmak\",\r\n    \"en_s\": \"\",\r\n    \"tr_s\": \"\"\r\n}, {\r\n    \"type\": \"word\",\r\n    \"en\": \"Lung\",\r\n    \"tr\": \"Akciğer / Ciğer\",\r\n    \"en_s\": \"\",\r\n    \"tr_s\": \"\"\r\n}, {\r\n    \"type\": \"word\",\r\n    \"en\": \"Lettuce, Iceberg\",\r\n    \"tr\": \"Marul  (Göbek Marul)\",\r\n    \"en_s\": \"\",\r\n    \"tr_s\": \"\",\r\n    \"img\": \"/projects/english-learner/source/img/lettuceiceberg.gif\"\r\n}, {\r\n    \"type\": \"word\",\r\n    \"en\": \"Peach\",\r\n    \"tr\": \"Şeftali\",\r\n    \"en_s\": \"\",\r\n    \"tr_s\": \"\",\r\n    \"img\": \"/projects/english-learner/source/img/peach.jpg\"\r\n}, {\r\n    \"type\": \"word\",\r\n    \"en\": \"Apricot\",\r\n    \"tr\": \"Kayısı\",\r\n    \"en_s\": \"\",\r\n    \"tr_s\": \"\",\r\n    \"img\": \"/projects/english-learner/source/img/apricot.jpg\"\r\n}, {\r\n    \"type\": \"word\",\r\n    \"en\": \"Pomegranate\",\r\n    \"tr\": \"Nar\",\r\n    \"en_s\": \"\",\r\n    \"tr_s\": \"\",\r\n    \"img\": \"/projects/english-learner/source/img/pomegranate.jpg\"\r\n}]","import { words } from './Words';\r\nimport { sentences } from './Sentences';\r\nexport const QuestionSource = { words, sentences };\r\nexport const getQuestions = () => {\r\n    fetch('/projects/english-learner/source/words.json').then(res => {\r\n        res.json().then(val => { QuestionSource.words = val; }).catch(err => { console.log(err); });\r\n    }).catch(err => { console.log(err); });\r\n    fetch('/projects/english-learner/source/sentences.json').then(res => {\r\n        res.json().then(val => { QuestionSource.sentences = val; }).catch(err => { console.log(err); });\r\n    }).catch(err => { console.log(err); });\r\n};","export const sentences = [{\r\n    \"type\": \"sentence\",\r\n    \"en\": \"This is the village in which my father was born.\",\r\n    \"tr\": \"Bu benim babamın doğduğu köy.\",\r\n    \"en_s\": \"\",\r\n    \"tr_s\": \"\"\r\n}, {\r\n    \"type\": \"sentence\",\r\n    \"en\": \"Whom do we pay?\",\r\n    \"tr\": \"Biz kime öderiz?\",\r\n    \"en_s\": \"\",\r\n    \"tr_s\": \"\"\r\n}, {\r\n    \"type\": \"sentence\",\r\n    \"en\": \"Nobody knows where she came from.\",\r\n    \"tr\": \"Kimse onun nereden geldiğini bilmiyor.\",\r\n    \"en_s\": \"\",\r\n    \"tr_s\": \"\"\r\n}, {\r\n    \"type\": \"sentence\",\r\n    \"en\": \"It is the city of which I told you.\",\r\n    \"tr\": \"O sana bahsettiğim şehir.\",\r\n    \"en_s\": \"\",\r\n    \"tr_s\": \"\"\r\n}, {\r\n    \"type\": \"sentence\",\r\n    \"en\": \"We know whose it is.\",\r\n    \"tr\": \"Biz onun kimin olduğunu biliyoruz.\",\r\n    \"en_s\": \"\",\r\n    \"tr_s\": \"\"\r\n}, {\r\n    \"type\": \"sentence\",\r\n    \"en\": \"I know where I am.\",\r\n    \"tr\": \"Ben nerede olduğumu biliyorum.\",\r\n    \"en_s\": \"\",\r\n    \"tr_s\": \"\"\r\n}, {\r\n    \"type\": \"sentence\",\r\n    \"en\": \"The man, whose son is here, is in the house as well.\",\r\n    \"tr\": \"Oğlu burada olan adam da evde.\",\r\n    \"en_s\": \"\",\r\n    \"tr_s\": \"\"\r\n}, {\r\n    \"type\": \"sentence\",\r\n    \"en\": \"The child who is not born.\",\r\n    \"tr\": \"Doğmamış çocuk.\",\r\n    \"en_s\": \"\",\r\n    \"tr_s\": \"\"\r\n}, {\r\n    \"type\": \"sentence\",\r\n    \"en\": \"I have a friend whose father is a teacher.\",\r\n    \"tr\": \"Babası öğretmen olan bir arkadaşım var.\",\r\n    \"en_s\": \"\",\r\n    \"tr_s\": \"\"\r\n}];","import { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Speech from 'react-speech';\r\nimport { getRandomColor } from '../helper/functionality';\r\nimport { QuestionSource } from '../services/Questions';\r\nimport '../styles/Questions.css';\r\n\r\nfunction Question({ onChange }) {\r\n    let isClicked = true;\r\n    const getRandomQuestion = () => {\r\n        const qList = []; const count = 4;\r\n        const types = ['words', 'sentences'];\r\n        const type = types[Math.floor(Math.random()*types.length)];\r\n        let q = QuestionSource[type][Math.floor(Math.random()*QuestionSource[type].length)];\r\n        for (let i = 0; i < count; i++) {\r\n            while (qList.includes(q)) {\r\n                q = QuestionSource[type][Math.floor(Math.random()*QuestionSource[type].length)];\r\n            }\r\n            qList.push(q);\r\n        }\r\n        return { qList, q: Math.floor(Math.random()*count) };\r\n    }\r\n    const [question, setQuestion] = useState(getRandomQuestion());\r\n    const getButtonStyle = () => {\r\n        const color = getRandomColor();\r\n        return `background-color:${color}33;border-color:${color}`;\r\n    }\r\n    const handleClick = (e) => {\r\n        const value = e === question.q;\r\n        onChange.current(value);\r\n        if (value) {\r\n            setTimeout(() => { onChange.current(); }, 700);\r\n            if (isClicked) {\r\n                isClicked = false;\r\n                setTimeout(() => { setQuestion(getRandomQuestion()); }, 1000);\r\n            }\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        const rsPlay = document.getElementsByClassName('rs-play');\r\n        for (let i = 0; i < rsPlay.length; i++) {\r\n            const style = getButtonStyle();\r\n            const element = rsPlay[i];\r\n            const handleLeave = () => { element.style = style; };\r\n            element.style = style;\r\n            element.addEventListener('mouseleave', handleLeave);\r\n        }\r\n    }, [question]);\r\n    return (\r\n        <div className=\"question-detail\">\r\n            <div>\r\n                <div>\r\n                    <Link to=\"/\" className=\"el-btn\">Back</Link>\r\n                    <h2>{question.qList[question.q].tr}</h2>\r\n                    <p><span className=\"question-type\">{question.qList[question.q].type}</span> Question: Choose correct {question.qList[question.q].type}.</p>\r\n                </div>\r\n                <div>\r\n                    {question.qList[question.q].img && <img src={question.qList[question.q].img} alt={question.qList[question.q].tr}/>}\r\n                </div>\r\n            </div>\r\n            <div>\r\n                {question.qList.map((item, itemI) => {\r\n                    return (\r\n                        <div key={itemI}>\r\n                            <div className=\"op-btn\" onClick={()=>{handleClick(itemI)}}>\r\n                                <Speech textAsButton displayText={item.en} voice=\"Google UK English Female\" text={item.en}/>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Question;","export function getRandomColor() {\r\n    const letters = '0123456789ABCDEF';\r\n    let color = '#';\r\n    for (let i = 0; i < 6; i++) {\r\n      color += letters[Math.floor(Math.random() * 16)];\r\n    }\r\n    return color;\r\n}","import { useRef } from 'react';\r\nimport Mascot from '../components/Mascot';\r\nimport Question from '../components/Question';\r\nimport '../styles/Questions.css';\r\n\r\nfunction Questions() {\r\n    const onEmotionChange = useRef();\r\n    return (\r\n        <div className=\"page\">\r\n            <div className=\"questions-cont\">\r\n                <Question onChange={onEmotionChange}/>\r\n                <div><Mascot onChange={onEmotionChange}/></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Questions;","import { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport Start from './pages/Start';\nimport Questions from './pages/Questions';\nimport { getQuestions } from './services/Questions';\nimport './App.css';\nimport './styles/Mascot.css';\n\nfunction App() {\n    getQuestions();\n    return (\n        <div className=\"App\">\n            <Router>\n                <Switch>\n                    <Route path=\"/\" component={Start} exact/>\n                    <Route path=\"/questions\" component={Questions}/>\n                </Switch>\n            </Router>\n        </div>\n    );\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}