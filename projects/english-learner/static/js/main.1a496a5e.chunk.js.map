{"version":3,"sources":["components/Mascot.js","pages/Start.js","services/Questions.js","pages/Questions.js","helper/functionality.js","App.js","reportWebVitals.js","index.js"],"names":["Mascot","onChange","smw","useRef","mouth","useEffect","moveSmiley","e","stopPropagation","preventDefault","x","pageX","y","pageY","w","document","body","clientWidth","h","clientHeight","angleX","current","getBoundingClientRect","angleY","style","transform","addEventListener","removeEventListener","value","classList","remove","add","className","ref","Start","to","QuestionSource","type","en","tr","en_s","tr_s","Questions","onEmotionChange","getRandomQuestion","qList","q","Math","floor","random","length","i","includes","push","useState","question","setQuestion","getButtonStyle","color","getRandomColor","backgroundColor","borderColor","handleClick","target","setTimeout","map","item","itemI","onClick","App","fetch","then","res","json","val","catch","err","console","log","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1a496a5e.chunk.js","sourcesContent":["import { useEffect, useRef } from 'react';\r\n\r\nfunction Mascot({ onChange }) {\r\n    const smw = useRef();\r\n    const mouth = useRef();\r\n    useEffect(() => {\r\n        function moveSmiley(e) {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n            const a = 45;\r\n            const x = e.pageX;\r\n            const y = e.pageY;\r\n            const w = document.body.clientWidth;\r\n            const h = document.body.clientHeight;\r\n            const o = smw.current.getBoundingClientRect().x - (w/2);\r\n            const angleX = ((x - o) - (w / 2)) / (w / 2) * a;\r\n            const angleY = ((h / 2) - y) / (h / 2) * a;\r\n            smw.current.style.transform = `rotateX(${angleY}deg) rotateY(${angleX}deg)`;\r\n        }    \r\n        document.body.addEventListener('mousemove', moveSmiley);\r\n        return () => { document.body.removeEventListener('mousemove', moveSmiley); }\r\n    }, []);\r\n    if (onChange) {\r\n        onChange.current = (value) => {\r\n            if (value === 'true') {\r\n                mouth.current.classList.remove('mouth-sad');\r\n                mouth.current.classList.add('mouth-happy');\r\n            } else if (value === 'false') {\r\n                mouth.current.classList.remove('mouth-happy');\r\n                mouth.current.classList.add('mouth-sad');\r\n            } else {\r\n                mouth.current.classList.remove('mouth-happy');\r\n                mouth.current.classList.remove('mouth-sad');\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"smiley\">\r\n            <div ref={smw} className=\"smiley-wrapper\" style={{transform: 'rotateX(0deg) rotateY(0deg)'}}>\r\n                <div>\r\n                    <div className=\"eye eye-left\"></div>\r\n                    <div className=\"eye eye-right\"></div>\r\n                    <div className=\"blush blush-left\"></div>\r\n                    <div className=\"blush blush-right\"></div>\r\n                    <div className=\"mouth\" ref={mouth}></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Mascot;","import { Link } from 'react-router-dom';\r\nimport Mascot from '../components/Mascot';\r\nimport '../styles/Start.css';\r\n\r\nfunction Start() {\r\n    return (\r\n        <div className=\"page\">\r\n            <div className=\"start-cont\">\r\n                <Mascot/>\r\n                <h2>Welcome!</h2>\r\n                <Link className=\"el-btn\" to=\"/questions\">Start Game</Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Start;","export const QuestionSource = { current: [{\r\n        type: 'word',\r\n        en: 'Brass',\r\n        tr: 'Prinçten Yapılmış',\r\n        en_s: '',\r\n        tr_s: ''\r\n    }, {\r\n        type: 'word',\r\n        en: 'January',\r\n        tr: 'Ocak',\r\n        en_s: '',\r\n        tr_s: ''\r\n    }, {\r\n        type: 'word',\r\n        en: 'February',\r\n        tr: 'Şubat',\r\n        en_s: '',\r\n        tr_s: ''\r\n    }, {\r\n        type: 'word',\r\n        en: 'March',\r\n        tr: 'Mart',\r\n        en_s: '',\r\n        tr_s: ''\r\n    }, {\r\n        type: 'word',\r\n        en: 'April',\r\n        tr: 'Nisan',\r\n        en_s: '',\r\n        tr_s: ''\r\n    }, {\r\n        type: 'word',\r\n        en: 'May',\r\n        tr: 'Mayıs',\r\n        en_s: '',\r\n        tr_s: ''\r\n    }, {\r\n        type: 'word',\r\n        en: 'June',\r\n        tr: 'Haziran',\r\n        en_s: '',\r\n        tr_s: ''\r\n    }, {\r\n        type: 'word',\r\n        en: 'July',\r\n        tr: 'Temmuz',\r\n        en_s: '',\r\n        tr_s: ''\r\n    }, {\r\n        type: 'word',\r\n        en: 'August',\r\n        tr: 'Ağustos',\r\n        en_s: '',\r\n        tr_s: ''\r\n    }, {\r\n        type: 'word',\r\n        en: 'September',\r\n        tr: 'Eylül',\r\n        en_s: '',\r\n        tr_s: ''\r\n    }, {\r\n        type: 'word',\r\n        en: 'October',\r\n        tr: 'Ekim',\r\n        en_s: '',\r\n        tr_s: ''\r\n    }, {\r\n        type: 'word',\r\n        en: 'November',\r\n        tr: 'Kasım',\r\n        en_s: '',\r\n        tr_s: ''\r\n    }, {\r\n        type: 'word',\r\n        en: 'December',\r\n        tr: 'Aralık',\r\n        en_s: '',\r\n        tr_s: ''\r\n    }, {\r\n        type: 'word',\r\n        en: 'Monday',\r\n        tr: 'Pazartesi',\r\n        en_s: '',\r\n        tr_s: ''\r\n    }, {\r\n        type: 'word',\r\n        en: 'Tuesday',\r\n        tr: 'Salı',\r\n        en_s: '',\r\n        tr_s: ''\r\n    }, {\r\n        type: 'word',\r\n        en: 'Wednesday',\r\n        tr: 'Çarşamba',\r\n        en_s: '',\r\n        tr_s: ''\r\n    }, {\r\n        type: 'word',\r\n        en: 'Thursday',\r\n        tr: 'Perşembe',\r\n        en_s: '',\r\n        tr_s: ''\r\n    }, {\r\n        type: 'word',\r\n        en: 'Friday',\r\n        tr: 'Cuma',\r\n        en_s: '',\r\n        tr_s: ''\r\n    }, {\r\n        type: 'word',\r\n        en: 'Saturday',\r\n        tr: 'Cumartesi',\r\n        en_s: '',\r\n        tr_s: ''\r\n    }, {\r\n        type: 'word',\r\n        en: 'Sunday',\r\n        tr: 'Pazar',\r\n        en_s: '',\r\n        tr_s: ''\r\n    }\r\n]};\r\n\r\nexport const getQuestions = () => {\r\n    fetch('/projects/english-learner/source/questions.json').then(res => {\r\n        res.json().then(val => { QuestionSource.current = val; }).catch(err => { console.log(err); });\r\n    }).catch(err => { console.log(err); });\r\n};","import { useRef, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Mascot from '../components/Mascot';\r\nimport { getRandomColor } from '../helper/functionality';\r\nimport { QuestionSource } from '../services/Questions';\r\nimport '../styles/Questions.css';\r\n\r\nfunction Questions() {\r\n    const onEmotionChange = useRef();\r\n    const getRandomQuestion = () => {\r\n        const qList = []; const count = 4;\r\n        let q = QuestionSource.current[Math.floor(Math.random()*QuestionSource.current.length)];\r\n        for (let i = 0; i < count; i++) {\r\n            while (qList.includes(q)) {\r\n                q = QuestionSource.current[Math.floor(Math.random()*QuestionSource.current.length)];\r\n            }\r\n            qList.push(q);\r\n        }\r\n        return { qList, q: Math.floor(Math.random()*count) };\r\n    }\r\n\r\n    const [question, setQuestion] = useState(getRandomQuestion());\r\n    \r\n    const getButtonStyle = () => {\r\n        const color = getRandomColor();\r\n        return {backgroundColor: color+'33', borderColor: color};\r\n    }\r\n    const handleClick = (e) => {\r\n        const value = e.target.value;\r\n        onEmotionChange.current(value);\r\n        if (value === 'true') {\r\n            setTimeout(() => { onEmotionChange.current(); }, 700);\r\n            setQuestion(getRandomQuestion());\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"page\">\r\n            <div className=\"questions-cont\">\r\n                <div className=\"question-detail\">\r\n                    <div>\r\n                        <Link to=\"/\" className=\"el-btn\">Back</Link>&nbsp;\r\n                        <h2>{question.qList[question.q].tr}</h2>\r\n                        <p><span className=\"question-type\">{question.qList[question.q].type}</span> Question: Choose correct word.</p>\r\n                    </div>\r\n                    <div>\r\n                        {question.qList.map((item, itemI) => {\r\n                            return (\r\n                                <div key={itemI}>\r\n                                    <button className=\"el-btn\" style={getButtonStyle()} onClick={handleClick} value={itemI === question.q}>\r\n                                        {item.en}\r\n                                    </button>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <Mascot onChange={onEmotionChange}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Questions;","export function getRandomColor() {\r\n    const letters = '0123456789ABCDEF';\r\n    let color = '#';\r\n    for (let i = 0; i < 6; i++) {\r\n      color += letters[Math.floor(Math.random() * 16)];\r\n    }\r\n    return color;\r\n}","import { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport Start from './pages/Start';\nimport Questions from './pages/Questions';\nimport { getQuestions } from './services/Questions';\nimport './App.css';\nimport './styles/Mascot.css';\n\nfunction App() {\n    getQuestions();\n    return (\n        <div className=\"App\">\n            <Router>\n                <Switch>\n                    <Route path=\"/\" component={Start} exact/>\n                    <Route path=\"/questions\" component={Questions}/>\n                </Switch>\n            </Router>\n        </div>\n    );\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}