{"version":3,"sources":["components/Square.js","components/Board.js","lang/index.js","components/Game.js","helpers/index.js","App.js","reportWebVitals.js","index.js"],"names":["Square","value","onClick","winner","className","Board","squares","renderSquare","i","langObjXOX","tr","next_player","go_to_start","go_to_move","draw","en","Game","React","useState","Array","fill","history","setHistory","stepNumber","setStepNumber","xIsNext","setXIsNext","current","lines","length","a","b","c","calculateWinner","calculateDraw","lang","localLang","localStorage","getItem","JSON","parse","getLangXOX","moves","map","step","move","jumpTo","lang-tag","newHistory","slice","concat","prev","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1bca7b2d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Square({ value, onClick, winner }) {\r\n    return (\r\n        <button className={`square ${value || winner ? 'filled' : ''}`} onClick={onClick}>\r\n            {value}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Square;\r\n","import React from 'react';\r\nimport Square from './Square';\r\n\r\nfunction Board({squares, onClick, winner}) {\r\n    const renderSquare = (i) => <Square value={squares[i]} winner={winner} onClick={() => { onClick(i); }}/>\r\n    return (\r\n        <div>\r\n            <div className=\"board-row\">\r\n                {renderSquare(0)}\r\n                {renderSquare(1)}\r\n                {renderSquare(2)}\r\n            </div>\r\n            <div className=\"board-row\">\r\n                {renderSquare(3)}\r\n                {renderSquare(4)}\r\n                {renderSquare(5)}\r\n            </div>\r\n            <div className=\"board-row\">\r\n                {renderSquare(6)}\r\n                {renderSquare(7)}\r\n                {renderSquare(8)}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Board;\r\n","export const langObjXOX = {\r\n    tr: {\r\n        next_player: 'Sıradaki Oyuncu: ',\r\n        go_to_start: 'Oyun başlangıcına git',\r\n        go_to_move: 'Hamleye git #',\r\n        winner: 'Kazanan: ',\r\n        draw: 'Berabere'\r\n    },\r\n    en: {\r\n        next_player: 'Next Player: ',\r\n        go_to_start: 'Go to game start',\r\n        go_to_move: 'Go to move #',\r\n        winner: 'Winner: ',\r\n        draw: 'Draw'\r\n    }\r\n}","import React from 'react';\r\nimport Board from './Board';\r\nimport { calculateWinner, calculateDraw, getLangXOX } from '../helpers';\r\nimport { langObjXOX } from '../lang';\r\n\r\nfunction Game() {\r\n    const [history, setHistory] = React.useState([{squares: Array(9).fill(null)}]);\r\n    const [stepNumber, setStepNumber] = React.useState(0);\r\n    const [xIsNext, setXIsNext] = React.useState(true);\r\n    const current = history[stepNumber];\r\n    const winner = calculateWinner(current.squares);\r\n    const draw = calculateDraw(current.squares);\r\n    let lang = getLangXOX();\r\n\r\n    const handleClick = (i) => {\r\n        if (winner || current.squares[i]) { return; }\r\n        const newHistory = history.slice(0, stepNumber + 1);\r\n        const squares = newHistory[newHistory.length - 1].squares.slice();\r\n        squares[i] = xIsNext ? 'X' : 'O';\r\n        setHistory(newHistory.concat([{squares}]));\r\n        setStepNumber(newHistory.length);\r\n        setXIsNext(prev => !prev);\r\n    }\r\n    const jumpTo = (step) => {\r\n        setStepNumber(step);\r\n        setXIsNext((step % 2) === 0);\r\n    }\r\n\r\n    const moves = history.map((step, move) => {\r\n        return (\r\n            <li key={move}>\r\n                <button className=\"history-button\" onClick={() => { jumpTo(move); }}>\r\n                    { move ? <span><span lang-tag=\"go_to_move\">{langObjXOX[lang]['go_to_move']}</span>{move}<span></span></span> : <span lang-tag=\"go_to_start\">{langObjXOX[lang]['go_to_start']}</span> }\r\n                </button>\r\n            </li>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div className=\"game\">\r\n            <div className=\"game-board\">\r\n                <Board squares={current.squares} onClick={handleClick} winner={winner}/>\r\n            </div>\r\n            <div className=\"game-info\">\r\n                <div className=\"status\">&nbsp;&nbsp;\r\n                    { winner ? <span><span lang-tag=\"winner\">{langObjXOX[lang]['winner']}</span><span>{winner}</span></span>:\r\n                        draw ? <span lang-tag=\"draw\">{langObjXOX[lang]['draw']}</span>:\r\n                        <span><span lang-tag=\"next_player\">{langObjXOX[lang]['next_player']}</span><span>{xIsNext ? 'X' : 'O'}</span></span>\r\n                    }\r\n                    </div>\r\n                <ul>{moves}</ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Game;\r\n","export function calculateWinner(squares) {\r\n    const lines = [\r\n        [0, 1, 2], [3, 4, 5], [6, 7, 8],\r\n        [0, 3, 6], [1, 4, 7], [2, 5, 8],\r\n        [0, 4, 8], [2, 4, 6]\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c] = lines[i];\r\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n            return squares[a];\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\nexport function calculateDraw(squares) {\r\n    for (const square of squares) {\r\n        if (square === null) { return false; }\r\n    }\r\n    return true;\r\n}\r\n\r\nexport function getLangXOX() {\r\n    let localLang = localStorage.getItem('lang');\r\n    return localLang ? JSON.parse(localLang) : 'en';\r\n}","import Game from './components/Game';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Game/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}