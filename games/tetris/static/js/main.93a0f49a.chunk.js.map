{"version":3,"sources":["img/bg.png","gameHelpers.js","components/lang.js","lang/types.js","components/styles/StyledTetris.js","tetrominos.js","hooks/useStage.js","components/styles/StyledStage.js","components/styles/StyledCell.js","components/Cell.js","components/Stage.js","components/styles/StyledDisplay.js","components/Display.js","components/styles/StyledStartButton.js","components/StartButton.js","components/nav/lang.js","components/nav/Nav.js","components/Tetris.js","hooks/usePlayer.js","hooks/useGameStatus.js","hooks/useInterval.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","createStage","Array","from","fill","checkCollision","player","stage","moveX","x","moveY","y","tetromino","length","pos","tr","score","rows","level","start_game","game_over","best_score","max_rows","en","TR","StyledTetrisWrapper","styled","div","bgImage","StyledTetris","TETROMINOS","0","shape","color","I","J","L","O","S","T","Z","randomTetromino","randTetromino","Math","floor","random","useStage","resetPlayer","useState","setStage","rowsCleared","setRowsCleared","useEffect","updateStage","prevStage","newStage","map","row","cell","forEach","value","collided","reduce","ack","findIndex","prev","unshift","push","sweepRows","StyledStage","props","height","width","StyledCell","type","React","memo","Stage","key","StyledDisplay","gameOver","Display","text","StyledStartButton","button","StartButton","callback","onClick","home","games","bird","snake","tetris","lcd_character_generator","movies","projects","tedbir","uav","login_app","latest_point","omr","piko_island","about","lang","Nav","setText","id","href","class","style","paddingTop","paddingBottom","visibility","borderTopLeftRadius","borderTopRightRadius","className","float","setLangStorage","target","Tetris","dropTime","setDropTime","setGameOver","setPlayer","rotate","matrix","dir","rotatedTetro","_","index","col","reverse","useCallback","STAGE_WIDTH","clonedPlayer","JSON","parse","stringify","offset","usePlayer","updatePlayerPos","playerRotate","setScore","setRows","setLevel","bestScore","setBestScore","maxRows","setMaxRows","linePoints","calcScore","newScore","localStorage","setItem","newRows","best","getItem","parseInt","useGameStatus","movePlayer","drop","move","keyCode","delay","savedCallback","useRef","current","setInterval","clearInterval","useInterval","role","tabIndex","onKeyDown","e","onKeyUp","App","setLang","sessionStorage","getLangStorage","param","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.93a0f49a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg.2810fe6b.png\";","export const STAGE_WIDTH = 12;\nexport const STAGE_HEIGHT = 20;\n\nexport const createStage = () =>\n  Array.from(Array(STAGE_HEIGHT), () =>\n    new Array(STAGE_WIDTH).fill([0, 'clear']),\n  );\n\nexport const checkCollision = (player, stage, { x: moveX, y: moveY }) => {\n  for (let y = 0; y < player.tetromino.length; y += 1) {\n    for (let x = 0; x < player.tetromino[y].length; x += 1) {\n      // 1. Check that we're on an actual Tetromino cell\n      if (player.tetromino[y][x] !== 0) {\n        if (\n          // 2. Check that our move is inside the game areas height (y)\n          // We shouldn't go through the bottom of the play area\n          !stage[y + player.pos.y + moveY] ||\n          // 3. Check that our move is inside the game areas width (x)\n          !stage[y + player.pos.y + moveY][x + player.pos.x + moveX] ||\n          // 4. Check that the cell wer'e moving to isn't set to clear\n          stage[y + player.pos.y + moveY][x + player.pos.x + moveX][1] !==\n            'clear'\n        ) {\n          return true;\n        }\n      }\n    }\n  }\n};\n","export const tr = {\r\n    score: 'Puan',\r\n    rows: 'Rows',\r\n    level: 'Seviye',\r\n    start_game: 'Oyuna Basla',\r\n    game_over: 'Oyun Bitti',\r\n    best_score: 'Best Score',\r\n    max_rows: \"Max Rows\"\r\n}\r\n\r\nexport const en = {\r\n    score: 'Score',\r\n    rows: 'Rows',\r\n    level: 'Level',\r\n    start_game: 'Start Game',\r\n    game_over: 'Game Over',\r\n    best_score: 'Best Score',\r\n    max_rows: \"Max Rows\"\r\n}\r\n","export const TR = 'tr';\r\nexport const EN = 'en';\r\nexport const LOADING = 'loading';","import styled from 'styled-components';\n\nimport bgImage from '../../img/bg.png';\n\nexport const StyledTetrisWrapper = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background: url(${bgImage}) #000;\n  background-size: cover;\n  overflow: hidden;\n`;\n\nexport const StyledTetris = styled.div`\n  display: flex;\n  align-items: flex-start;\n  padding: 40px;\n  margin: 0 auto;\n  max-width: 900px;\n\n  aside {\n    width: 100%;\n    max-width: 200px;\n    display: block;\n    padding: 0 20px;\n  }\n`;\n","export const TETROMINOS = {\n  0: { shape: [[0]], color: '0, 0, 0' },\n  I: {\n    shape: [[0, 'I', 0, 0], [0, 'I', 0, 0], [0, 'I', 0, 0], [0, 'I', 0, 0]],\n    color: '80, 227, 230',\n  },\n  J: {\n    shape: [[0, 'J', 0], [0, 'J', 0], ['J', 'J', 0]],\n    color: '36, 95, 223',\n  },\n  L: {\n    shape: [[0, 'L', 0], [0, 'L', 0], [0, 'L', 'L']],\n    color: '223, 173, 36',\n  },\n  O: {\n    shape: [['O', 'O'], ['O', 'O']],\n    color: '223, 217, 36',\n  },\n  S: {\n    shape: [[0, 'S', 'S'], ['S', 'S', 0], [0, 0, 0]],\n    color: '48, 211, 56',\n  },\n  T: {\n    shape: [[0, 0, 0], ['T', 'T', 'T'], [0, 'T', 0]],\n    color: '132, 61, 198',\n  },\n  Z: {\n    shape: [['Z', 'Z', 0], [0, 'Z', 'Z'], [0, 0, 0]],\n    color: '227, 78, 78',\n  },\n};\n\nexport const randomTetromino = () => {\n  const tetrominos = 'IJLOSTZ';\n  const randTetromino =\n    tetrominos[Math.floor(Math.random() * tetrominos.length)];\n  return TETROMINOS[randTetromino];\n};\n","import { useState, useEffect } from 'react';\nimport { createStage } from '../gameHelpers';\n\nexport const useStage = (player, resetPlayer) => {\n  const [stage, setStage] = useState(createStage());\n  const [rowsCleared, setRowsCleared] = useState(0);\n\n  useEffect(() => {\n    setRowsCleared(0);\n\n    const sweepRows = newStage =>\n      newStage.reduce((ack, row) => {\n        if (row.findIndex(cell => cell[0] === 0) === -1) {\n          setRowsCleared(prev => prev + 1);\n          ack.unshift(new Array(newStage[0].length).fill([0, 'clear']));\n          return ack;\n        }\n        ack.push(row);\n        return ack;\n      }, [])\n\n    const updateStage = prevStage => {\n      // First flush the stage\n      const newStage = prevStage.map(row =>\n        row.map(cell => (cell[1] === 'clear' ? [0, 'clear'] : cell)),\n      );\n\n      // Then draw the tetromino\n      player.tetromino.forEach((row, y) => {\n        row.forEach((value, x) => {\n          if (value !== 0) {\n            newStage[y + player.pos.y][x + player.pos.x] = [\n              value,\n              `${player.collided ? 'merged' : 'clear'}`,\n            ];\n          }\n        });\n      });\n      // Then check if we collided\n      if (player.collided) {\n        resetPlayer();\n        return sweepRows(newStage);\n      }\n      return newStage;\n    };\n\n    setStage(prev => updateStage(prev));\n  }, [player, resetPlayer]);\n\n  return [stage, setStage, rowsCleared];\n};\n","import styled from 'styled-components';\n\nexport const StyledStage = styled.div`\n  display: grid;\n  grid-template-rows: repeat(\n    ${props => props.height},\n    calc(25vw / ${props => props.width})\n  );\n  grid-template-columns: repeat(${props => props.width}, 1fr);\n  grid-gap: 1px;\n  border: 2px solid #333;\n  width: 100%;\n  max-width: 25vw;\n  background: #111;\n`;","import styled from 'styled-components';\n\nexport const StyledCell = styled.div`\n  width: auto;\n  background: rgba(${props => props.color}, 0.8);\n  border: ${props => (props.type === 0 ? '0px solid' : '4px solid')};\n  border-bottom-color: rgba(${props => props.color}, 0.1);\n  border-right-color: rgba(${props => props.color}, 1);\n  border-top-color: rgba(${props => props.color}, 1);\n  border-left-color: rgba(${props => props.color}, 0.3);\n`","import React from 'react';\nimport { StyledCell } from './styles/StyledCell';\nimport { TETROMINOS } from '../tetrominos';\n\nconst Cell = ({ type }) => (\n  <StyledCell type={type} color={TETROMINOS[type].color} />\n)\n\nexport default React.memo(Cell);","import React from 'react';\nimport { StyledStage } from './styles/StyledStage';\n\nimport Cell from './Cell';\n\nconst Stage = ({ stage }) => (\n  <StyledStage width={stage[0].length} height={stage.length}>\n    {stage.map(row => row.map((cell, x) => <Cell key={x} type={cell[0]} />))}\n  </StyledStage>\n);\n\nexport default Stage;\n","import styled from 'styled-components';\n\nexport const StyledDisplay = styled.div`\n  box-sizing: border-box;\n  display: flex;\n  align-items: center; \n  margin: 0 0 20px 0;\n  padding: 20px;\n  border: 4px solid #333;\n  min-height: 30px;\n  width: 100%;\n  border-radius: 20px;\n  color: ${props => (props.gameOver ? 'red' : '#999')};\n  background: #000;\n  font-family: Pixel, Arial, Helvetica, sans-serif;\n  font-size: 0.8rem;\n`;","import React from 'react';\nimport { StyledDisplay } from './styles/StyledDisplay';\n\nconst Display = ({ gameOver, text }) => (\n  <StyledDisplay gameOver={gameOver}>{text}</StyledDisplay>\n)\n\nexport default Display;","import styled from 'styled-components';\n\nexport const StyledStartButton = styled.button`\n  box-sizing: border-box;\n  margin: 0 0 20px 0;\n  padding: 20px;\n  min-height: 30px;\n  width: 100%;\n  border-radius: 20px;\n  border: none;\n  color: white;\n  background: #333;\n  font-family: Pixel, Arial, Helvetica, sans-serif;\n  font-size: 1rem;\n  outline: none;\n  cursor: pointer;\n`","import React from 'react';\nimport { StyledStartButton } from './styles/StyledStartButton';\n\nconst StartButton = ({ callback, text }) => (\n  <StyledStartButton onClick={callback}>{text}</StyledStartButton>\n)\n\nexport default StartButton;","export const tr = {\r\n    home: 'Anasayfa',\r\n    games: 'Oyunlar',\r\n    bird: 'Bird',\r\n    snake: 'Snake',\r\n    tetris: 'Tetris',\r\n    lcd_character_generator: 'LCD Karakter Hesaplayıcı',\r\n    movies: 'Filmler',\r\n    projects: 'Projeler',\r\n    tedbir: 'Tedbir App',\r\n    uav: 'Vatoz On7 (İHA)',\r\n    login_app: 'LogIn App',\r\n    latest_point: 'Latest Point',\r\n    omr: 'OMR',\r\n    piko_island: 'Piko Island',\r\n    about: 'Hakkında',\r\n    lang: 'TR'\r\n};\r\nexport const en = {\r\n    home: 'Home',\r\n    games: 'Games',\r\n    bird: 'Bird',\r\n    snake: 'Snake',\r\n    tetris: 'Tetris',\r\n    lcd_character_generator: 'LCD Character Generator',\r\n    movies: 'Movies',\r\n    projects: 'Projects',\r\n    tedbir: 'Tedbir App',\r\n    uav: 'Vatoz On7 (UAV)',\r\n    login_app: 'LogIn App',\r\n    latest_point: 'Latest Point',\r\n    omr: 'OMR',\r\n    piko_island: 'Piko Island',\r\n    about: 'About',\r\n    lang: 'EN'\r\n};","import React, { useState, useEffect } from 'react';\r\nimport './Nav.css';\r\n//import { connect } from 'react-redux';\r\n//import { setLangTR, setLangEN, getLang } from '../lang/actions';\r\nimport { TR, EN } from '../../lang/types';\r\nimport { tr, en } from './lang';\r\n//import { Link } from 'react-router-dom';\r\n\r\nconst Nav = (props) => {\r\n\r\n    const [text, setText] = useState(en);\r\n\r\n    useEffect(() => {\r\n        if (props.lang === TR) {\r\n            setText(tr);\r\n        }\r\n        else { setText(en); }\r\n    }, [props.lang]);\r\n\r\n    return (\r\n        <ul id=\"ul\" >\r\n            <li id=\"li\"><a id=\"a\" href=\"/\">{text.home}</a></li>\r\n            <li id=\"li\" class=\"dropdown\">\r\n                <a id=\"a\" href=\"javascript:void(0)\" class=\"dropbtn\">{text.games}</a>\r\n                <div class=\"dropdown-content\">\r\n                    <a style={{ paddingTop: 0, paddingBottom: 0, height: 0, visibility: 'hidden' }}>{text.games}</a>\r\n                    <a href=\"/games/bird\" style={{ borderTopLeftRadius: 0, borderTopRightRadius: 0 }}>{text.bird}</a>\r\n                    <a href=\"/games/snake\">{text.snake}</a>\r\n                    <a href=\"javascript:void(0)\">{text.tetris}</a>\r\n                </div>\r\n            </li>\r\n            <li id=\"li\"><a id=\"a\" href=\"/projects/lcd-character-generator\">{text.lcd_character_generator}</a></li>\r\n            <li id=\"li\"><a id=\"a\" href=\"/projects/movies\" className=\"nav-link\">{text.movies}</a></li>\r\n            {/*<li id=\"li\" class=\"dropdown\">\r\n                <a id=\"a\" href=\"javascript:void(0)\" class=\"dropbtn\">{text.projects}</a>\r\n                <div class=\"dropdown-content\">\r\n                    <a href=\"/tedbir\" style={{ borderTopLeftRadius: 0, borderTopRightRadius: 0 }}>{text.tedbir}</a>\r\n                    <a href=\"/uav\">{text.uav}</a>\r\n                    <a href=\"/login_app\">{text.login_app}</a>\r\n                    <a href=\"/latest_point\">{text.latest_point}</a>\r\n                    <a href=\"/omr\">{text.omr}</a>\r\n                    <a href=\"/piko_island\">{text.piko_island}</a>\r\n                </div>\r\n    </li>*/}\r\n            <li id=\"li\" style={{ float: 'right' }} class=\"dropdown\">\r\n                <a href=\"javascript:void(0)\" class=\"dropbtn\">{text.lang}</a>\r\n                <div /*style={{ background: 'none' }}*/ class=\"lang-dropdown-content\">\r\n                    <a style={{ borderTopLeftRadius: 0, borderTopRightRadius: 0 }} onClick={() => { props.setLangStorage(TR); }}>TR</a>\r\n                    <a style={{}} onClick={() => { props.setLangStorage(EN); }}>EN</a>\r\n                </div>\r\n            </li>\r\n            <li id=\"li\" style={{ float: 'right' }}><a id=\"a\" href=\"https://about.me/iAKIN\" target=\"_blank\">{text.about}</a></li>\r\n\r\n        </ul>\r\n    )\r\n};\r\n\r\nexport default Nav;","import React, { useState, useEffect } from 'react';\n\nimport { createStage, checkCollision } from '../gameHelpers';\nimport { tr, en } from './lang';\nimport { TR } from '../lang/types';\n\n// Styled Components\nimport { StyledTetrisWrapper, StyledTetris } from './styles/StyledTetris';\n\n// Custom Hooks\nimport { useInterval } from '../hooks/useInterval';\nimport { usePlayer } from '../hooks/usePlayer';\nimport { useStage } from '../hooks/useStage';\nimport { useGameStatus } from '../hooks/useGameStatus';\n\n// Components\nimport Stage from './Stage';\nimport Display from './Display';\nimport StartButton from './StartButton';\nimport Nav from './nav/Nav';\n\n\nconst Tetris = (props) => {\n  const [dropTime, setDropTime] = useState(null);\n  const [gameOver, setGameOver] = useState(false);\n\n  const [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer();\n  const [stage, setStage, rowsCleared] = useStage(player, resetPlayer);\n  const [score, setScore, rows, setRows, level, setLevel, bestScore, maxRows] = useGameStatus(rowsCleared);\n\n  //console.log('re-render');\n\n  const [text, setText] = useState(en);\n  \n  useEffect(() => {\n    if (props.lang === TR) {\n      setText(tr);\n    }\n    else { setText(en); }\n  }, [props.lang]);\n\n  const movePlayer = dir => {\n    if (!checkCollision(player, stage, { x: dir, y: 0 })) {\n      updatePlayerPos({ x: dir, y: 0 });\n    }\n  };\n\n  const startGame = () => {\n    // Reset everything\n    setStage(createStage());\n    setDropTime(1000);\n    resetPlayer();\n    setGameOver(false);\n    setScore(0);\n    setRows(0);\n    setLevel(0);\n  };\n\n  const drop = () => {\n    // Increase level when player has cleared 10 rows\n    if (rows > (level + 1) * 10) {\n      setLevel(prev => prev + 1);\n      // Also increase speed\n      setDropTime(1000 / (level + 1) + 200);\n    }\n\n    if (!checkCollision(player, stage, { x: 0, y: 1 })) {\n      updatePlayerPos({ x: 0, y: 1, collided: false });\n    } else {\n      // Game Over\n      if (player.pos.y < 1) {\n        //console.log('GAME OVER!!!');\n        setGameOver(true);\n        setDropTime(null);\n      }\n      updatePlayerPos({ x: 0, y: 0, collided: true });\n    }\n  };\n\n  const keyUp = ({ keyCode }) => {\n    if (!gameOver) {\n      if (keyCode === 40) {\n        //console.log(\"interval on\")\n        setDropTime(1000 / (level + 1) + 200);\n      }\n    }\n  };\n\n  const dropPlayer = () => {\n    //console.log(\"interval off\")\n    setDropTime(null);\n    drop();\n  };\n\n  const move = ({ keyCode }) => {\n    if (!gameOver) {\n      if (keyCode === 37) {\n        movePlayer(-1);\n      } else if (keyCode === 39) {\n        movePlayer(1);\n      } else if (keyCode === 40) {\n        dropPlayer();\n      } else if (keyCode === 38) {\n        playerRotate(stage, 1);\n      }\n    }\n  };\n\n  useInterval(() => {\n    drop();\n  }, dropTime);\n\n  return (\n    <StyledTetrisWrapper\n      role=\"button\"\n      tabIndex=\"0\"\n      onKeyDown={e => move(e)}\n      onKeyUp={keyUp}\n    >\n      <Nav setLangStorage={props.setLangStorage} lang={props.lang} />\n      <StyledTetris>\n        <Stage stage={stage} />\n        <aside>\n          {gameOver ? (\n            <Display gameOver={gameOver} text={text.game_over} />\n          ) : (\n              <div>\n                <Display text={`${text.best_score}: ${bestScore}`} />\n                <Display text={`${text.score}: ${score}`} />\n                <Display text={`${text.max_rows}: ${maxRows}`} />\n                <Display text={`${text.rows}: ${rows}`} />\n                <Display text={`${text.level}: ${level}`} />\n              </div>\n            )}\n          <StartButton callback={startGame} text={text.start_game} />\n        </aside>\n      </StyledTetris>\n    </StyledTetrisWrapper>\n  );\n};\n\nexport default Tetris;\n","import { useState, useCallback } from 'react';\n\nimport { TETROMINOS, randomTetromino } from '../tetrominos';\nimport { STAGE_WIDTH, checkCollision } from '../gameHelpers';\n\nexport const usePlayer = () => {\n  const [player, setPlayer] = useState({\n    pos: { x: 0, y: 0 },\n    tetromino: TETROMINOS[0].shape,\n    collided: false,\n  });\n\n  const rotate = (matrix, dir) => {\n    // Make the rows to become cols (transpose)\n    const rotatedTetro = matrix.map((_, index) =>\n      matrix.map(col => col[index]),\n    );\n    // Reverse each row to get a rotated matrix\n    if (dir > 0) return rotatedTetro.map(row => row.reverse());\n    return rotatedTetro.reverse();\n  };\n\n  const playerRotate = (stage, dir) => {\n    const clonedPlayer = JSON.parse(JSON.stringify(player));\n    clonedPlayer.tetromino = rotate(clonedPlayer.tetromino, dir);\n\n    const pos = clonedPlayer.pos.x;\n    let offset = 1;\n    while(checkCollision(clonedPlayer, stage, { x: 0, y: 0 })) {\n      clonedPlayer.pos.x += offset;\n      offset = -(offset + (offset > 0 ? 1 : -1));\n      if (offset > clonedPlayer.tetromino[0].length) {\n        rotate(clonedPlayer.tetromino, -dir);\n        clonedPlayer.pos.x = pos;\n        return;\n      }\n    }\n    setPlayer(clonedPlayer);\n  };\n\n  const updatePlayerPos = ({ x, y, collided }) => {\n    setPlayer(prev => ({\n      ...prev,\n      pos: { x: (prev.pos.x += x), y: (prev.pos.y += y) },\n      collided,\n    }));\n  };\n\n  const resetPlayer = useCallback(() => {\n    setPlayer({\n      pos: { x: STAGE_WIDTH / 2 - 2, y: 0 },\n      tetromino: randomTetromino().shape,\n      collided: false,\n    });\n  }, []);\n\n  return [player, updatePlayerPos, resetPlayer, playerRotate];\n};\n","import { useState, useEffect, useCallback } from 'react';\r\n\r\nexport const useGameStatus = rowsCleared => {\r\n    const [score, setScore] = useState(0);\r\n    const [rows, setRows] = useState(0);\r\n    const [level, setLevel] = useState(0);\r\n    const [bestScore, setBestScore] = useState(0);\r\n    const [maxRows, setMaxRows] = useState(0);\r\n\r\n    const linePoints = [40, 100, 300, 1200];\r\n\r\n    const calcScore = useCallback(() => {\r\n        // We have score\r\n        if (rowsCleared > 0) {\r\n            // This is how original Tetris score is calculated\r\n            setScore(prev => {\r\n                let newScore = prev + linePoints[rowsCleared - 1] * (level + 1);\r\n                if (newScore > bestScore) {\r\n                    setBestScore(newScore);\r\n                    localStorage.setItem('tetrisBestScore', newScore);\r\n                }\r\n                return newScore;\r\n            });\r\n            setRows(prev => {\r\n                let newRows = prev + rowsCleared;\r\n                if (newRows > maxRows) {\r\n                    setMaxRows(newRows);\r\n                    localStorage.setItem('tetrisMaxRows', maxRows);\r\n                }\r\n                return newRows;\r\n            });\r\n        }\r\n    }, [level, linePoints, rowsCleared]);\r\n\r\n    useEffect(() => {\r\n        let best = localStorage.getItem('tetrisBestScore');\r\n        if (best) {\r\n            setBestScore(parseInt(best));\r\n        }\r\n        let row = localStorage.getItem('tetrisMaxRows');\r\n        if (row) {\r\n            setMaxRows(parseInt(row));\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        calcScore();\r\n    }, [calcScore, rowsCleared, score]);\r\n\r\n    return [score, setScore, rows, setRows, level, setLevel, bestScore, maxRows];\r\n};","import { useEffect, useRef } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n}\n","import React, { useState, useEffect } from 'react';\nimport Tetris from './components/Tetris';\nimport { TR, EN } from './lang/types';\n\nconst App = () => {\n  const [lang, setLang] = useState(EN);\n\n  const setLangStorage = (param) => {\n    sessionStorage.setItem('lang', param);\n    setLang(param);\n  }\n  const getLangStorage = () => {\n    const lang = sessionStorage.getItem('lang');\n    if (lang === TR) {\n      setLang(TR);\n    }\n    else {\n      setLang(EN);\n    }\n  }\n  useEffect(() => {\n    getLangStorage();\n  });\n\n  return (\n    <div className=\"App\">\n      <Tetris setLangStorage={setLangStorage} lang={lang} />\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}